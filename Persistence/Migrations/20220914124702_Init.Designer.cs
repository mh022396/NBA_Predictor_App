// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220914124702_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Models.CurrentPlayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<float>("AssistsPerGame")
                        .HasColumnType("real");

                    b.Property<float>("BlocksPerGame")
                        .HasColumnType("real");

                    b.Property<float>("FieldGoalPercentage")
                        .HasColumnType("real");

                    b.Property<float>("FreeThrowPercentage")
                        .HasColumnType("real");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<float>("MinutesPlayed")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PointsPerGame")
                        .HasColumnType("real");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ReboundsPerGame")
                        .HasColumnType("real");

                    b.Property<float>("StealsPerGame")
                        .HasColumnType("real");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ThreePointPercentage")
                        .HasColumnType("real");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CurrentPlayers");
                });

            modelBuilder.Entity("Domain.Models.MVPPrediction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PredictedRank")
                        .HasColumnType("int");

                    b.Property<decimal>("PredictedShare")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Predictions");
                });

            modelBuilder.Entity("Domain.Models.PastMVP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<float>("AssistsPerGame")
                        .HasColumnType("real");

                    b.Property<float>("BlocksPerGame")
                        .HasColumnType("real");

                    b.Property<float>("FieldGoalPercentage")
                        .HasColumnType("real");

                    b.Property<float>("FreeThrowPercentage")
                        .HasColumnType("real");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<float>("MVPShare")
                        .HasColumnType("real");

                    b.Property<float>("MinutesPlayed")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PointsPerGame")
                        .HasColumnType("real");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ReboundsPerGame")
                        .HasColumnType("real");

                    b.Property<float>("StealsPerGame")
                        .HasColumnType("real");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ThreePointPercentage")
                        .HasColumnType("real");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PastMVPs");
                });

            modelBuilder.Entity("Domain.Models.PastPlayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Age")
                        .HasColumnType("real");

                    b.Property<float>("AssistsPerGame")
                        .HasColumnType("real");

                    b.Property<float>("BlocksPerGame")
                        .HasColumnType("real");

                    b.Property<float>("FieldGoalPercentage")
                        .HasColumnType("real");

                    b.Property<float>("FreeThrowPercentage")
                        .HasColumnType("real");

                    b.Property<float>("GamesPlayed")
                        .HasColumnType("real");

                    b.Property<float>("MinutesPlayed")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PointsPerGame")
                        .HasColumnType("real");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ReboundsPerGame")
                        .HasColumnType("real");

                    b.Property<float>("StealsPerGame")
                        .HasColumnType("real");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ThreePointPercentage")
                        .HasColumnType("real");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PastPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
